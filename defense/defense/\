<!doctype html>
<html class="no-js" lang="">

<head>
  <meta charset="utf-8">
  <title>Herb Susmann Dissertation Defense</title>
  <meta name="description" content="">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <meta property="og:title" content="">
  <meta property="og:type" content="">
  <meta property="og:url" content="">
  <meta property="og:image" content="">

  <style type='text/css'>
	body {
		font-family: sans-serif;
		font-style: normal;
		line-height: 1.4;
	}

  #launch {
    margin: 5px 0px;
  }
  
	#container {
		width: 725px;
		margin: auto;
		padding-top: 25px;
		position: relative;
	}

  canvas {
		border: 1px solid rgba(0, 0, 0, 0.1);
		margin-top: 20px;
	  
		--tw-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
		box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
	}
	
	abbr {
		text-decoration: none;
	}
	
	.caption {
		position: absolute;
		left: -125px;
		width: 100px;
		text-align: right;
		padding-top: 1.3em;
	}
	
	.caption a {
		color: #ccc;
		text-decoration: none;
	}
	
	.caption a:hover {
		text-decoration: underline;
	}

  .frame {
    position: relative;
    width: 725px;
    height: 544px;
    z-index: 1;
    margin-bottom: 10px;
  }

  .frame canvas {
    width: 100%;
    height: 100%;
  }

  .frame.active {
    width: 100%;
    height: 100%;
    position: fixed;
    left: 0px;
    top: 0px;
    z-index: 100;
    background: black;
  }

  .frame.active canvas {
    position: relative;
    margin: 0px;
    height: 100%;
    width: 100%;
    box-shadow: none;
    border: none;
    margin: auto;
    width: auto;
  }

  #container.presentation {
    #height: 10px;
    #overflow: hidden;
  }

  .frame .iframe-container {
    position: absolute;
    left: 0px;
    top: 80px;
    height: 380px;
    width: 100%;
    overflow: hidden;
    z-index: 5;
    background: white;
    border-bottom: 100px solid white;
  }


  .frame .iframe-container iframe {
    background: white;
    position: relative;
    width: 101%;
    height: 450px;
    z-index: 5;
    border: none;
    overflow: hidden;
  }

  .frame.active .iframe-container {
    left: auto;
    top: 100px;
  }

  .frame.active .iframe-container iframe {
  }

  .caption button {
    background: white;
    border: none;
    cursor: pointer;
    margin: 2px;
    padding: 0px;
  }
  </style>
  
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.13.3/dist/katex.min.css" integrity="sha384-ThssJ7YtjywV52Gj4JE/1SQEDoMEckXyhkFVwaf4nDSm5OBlXeedVYjuuUd0Yua+" crossorigin="anonymous">
  <script src="https://cdn.jsdelivr.net/npm/katex@0.13.3/dist/katex.min.js" integrity="sha384-Bi8OWqMXO1ta+a4EPkZv7bYGIes7C3krGSZoTGNTAnAn5eYQc7IIXrJ/7ck1drAi" crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/katex@0.13.3/dist/contrib/auto-render.min.js" integrity="sha384-vZTG03m+2yp6N6BNi5iM4rW4oIwk5DfcNdFfxkk9ZWpDriOkXX8voJBFrAO7MpVl" crossorigin="anonymous"></script>
</head>

<body>

<div id='container' role="main" area-live="polite">
  <h2>Bayesian Hierarchical Temporal Modeling and Targeted Learning with Application to Reproductive Health</h2>

  <a target="_blank" href="./Susmann_Dissertation.pdf">Download Slides as
    PDF</a><br/>
  <button id="launch">Start Presentation</button>

</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.8.335/pdf.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>

<script>
// If absolute URL from the remote server is provided, configure the CORS
// header on that server.
var pdfUrl = './Susmann_Dissertation.pdf';
var textUrl = "./text.md";

// Loaded via <script> tag, create shortcut to access PDF.js exports.
var pdfjsLib = window['pdfjs-dist/build/pdf'];
// The workerSrc property shall be specified.
pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.8.335/pdf.worker.min.js';

var container = document.getElementById("container");

var activePage = 1;
var presentationMode = false;
var numPages = 0;
var pageRatio = 0;
var iframeHeight = window.innerHeight * 0.75;
var observableHeight = iframeHeight * 0.8;

startFromSlide = function(index) {
  activePage = index;
  startPresentation();
  return false;
}

startPresentation = function() {
  presentationMode = true;
  setSlideActive(activePage);
  container.classList.add("presentation");
}

endPresentation = function() {
  presentationMode = false;
  removeSlideActive(activePage);
  container.classList.remove("presentation");
}

setSlideActive = function(index) {
  var frame = document.getElementById("frame-" + index);
  frame.style.paddingLeft = ((window.innerWidth - window.innerHeight
          * pageRatio) / 2) + "px";


  var iframes = frame.getElementsByTagName("iframe");
  if(iframes.length > 0) {
    var url = iframes[0].getAttribute("src");
    iframes[0].setAttribute("src", url.replace("height=350", "height="
        + observableHeight));
    iframes[0].style.height = iframeHeight + "px";
  }

  var frameContainers = frame.getElementsByClassName("iframe-container");
  if(frameContainers.length > 0) {
      frameContainers[0].style.width = (window.innerHeight * pageRatio) + "px";
      frameContainers[0].style.height = (iframeHeight * 0.9) + "px";
  } 

  frame.classList.add("active");
}

removeSlideActive = function(index) {
  var frame = document.getElementById("frame-" + index);
  frame.style.paddingLeft = "0px";

  var iframes = frame.getElementsByTagName("iframe");
  if(iframes.length > 0) {
    var url = iframes[0].getAttribute("src");
    iframes[0].setAttribute("src", url.replace("height=" + observableHeight, "height=350"));
    iframes[0].style.height = "";
  }

  var frameContainers = frame.getElementsByClassName("iframe-container");
  if(frameContainers.length > 0) {
      frameContainers[0].style.width = "100%";
      frameContainers[0].style.height = "";
  }

  frame.classList.remove("active");
}

prevSlide = function() {
  if(activePage > 1) {
    removeSlideActive(activePage);
    activePage--;
    setSlideActive(activePage);
  }
}

nextSlide = function() {
  if(activePage < numPages) {
    removeSlideActive(activePage);
    activePage++;
    setSlideActive(activePage);
  }
}

keyHandler = function(e) {
  if(presentationMode == true) {
    if(e.key == "ArrowRight") {
      nextSlide();
    }
    else if(e.key == "ArrowLeft") {
      prevSlide();
    }
    else if(e.key == "Escape") {
      endPresentation();
    }
  }
}

document.getElementById("launch")
  .addEventListener("click", startPresentation);

document.addEventListener("keydown", keyHandler);

function renderObservable(index, cell) {
  var url = "https://observablehq.com/embed/@herbps10/defense_slides?cells="
      + cell + "&height=350";

  var frame = document.getElementById("frame-" + index);

  var iframeContainer = document.createElement("div");
  iframeContainer.classList.add("iframe-container");

  var iframe = document.createElement("iframe");
  iframe.setAttribute("width", "100%");
  iframe.setAttribute("height", "100%");
  iframe.setAttribute("frameBorder", "0");
  iframe.setAttribute("src", url);

  iframeContainer.append(iframe);

  frame.append(iframeContainer);
}

function renderObservables() {
    renderObservable(24, "slide2");
    renderObservable(28, "slide1");
}

// Asynchronous download of PDF
var loadingTask = pdfjsLib.getDocument(pdfUrl);
loadingTask.promise.then(function(pdf) {
	numPages = pdf.numPages;
	
	for(var pageNumber = 1; pageNumber <= numPages; pageNumber++) {
    var frame = document.createElement("div");
    frame.setAttribute("id", "frame-" + pageNumber);
		frame.setAttribute("class", "frame");

		var canvas = document.createElement("canvas");
		canvas.setAttribute("id", "canvas-" + pageNumber);
		canvas.setAttribute("height", 544);
		canvas.setAttribute("width", 725);
		canvas.setAttribute("role", "img");
		
		var text = document.createElement("div");
		text.setAttribute("id", "text-" + pageNumber);
		
		var caption = document.createElement("div");
		caption.setAttribute("class", "caption");
		caption.innerHTML = `<a id='slide-${pageNumber}'
 href='#slide-${pageNumber}'>Slide ${pageNumber}</a><br/><button
      onClick='window.scrollTo(0, 0)' title='Back to top'>üîº</button><button
      title='Start from here' onClick='startFromSlide(${pageNumber})'>‚ñ∂Ô∏è</button>`;

    frame.append(canvas);
		
		container.append(caption);
		container.append(frame);
		container.append(text);
	}
	
	fetch(textUrl)
		.then(function(data) { return data.text() })
		.then(function(res) {
			var slides = res.split(/# Slide/);
			
			for(var pageNumber = 1; pageNumber <= numPages; pageNumber++) {
				if(slides[pageNumber] != undefined) {
					var slide = document.getElementById("canvas-" + pageNumber);
					
					var alt = slides[pageNumber].trim().match(/: (.+?)\n/);
					if(alt != null) {
					  alt = alt[1];
  					slide.setAttribute("aria-label", alt);
  					slide.innerHTML = alt;
					}
					
					var html = marked.marked(slides[pageNumber].replaceAll('‚Äô', "'").replace(/[0-9]+?: (.+?)\n/gm, ""));
					document.getElementById("text-" + pageNumber).innerHTML = html;
					renderMathInElement(document.getElementById("text-" + pageNumber), { delimiters: [ { left: "$", right: "$", display: false }] });
				}
			}
			
		});
	
	for(var pageNumber = 1; pageNumber <= numPages; pageNumber++) {
		pdf.getPage(pageNumber).then(function(page) {
      //var desiredHeight = window.innerHeight;
      //var viewport = page.getViewport({ scale: 1 });
      //var scale = desiredHeight / viewport.height;

      //var viewport = page.getViewport({ scale: scale });
      var viewport = page.getViewport({ scale: 5 });

			// Prepare canvas using PDF page dimensions
			var canvas = document.getElementById('canvas-' + (page._pageIndex + 1));
			var context = canvas.getContext('2d');
			canvas.height = viewport.height;
			canvas.width = viewport.width;
      pageRatio = canvas.width / canvas.height;

			// Render PDF page into canvas context
			var renderContext = {
			  canvasContext: context,
			  viewport: viewport
			};
			var renderTask = page.render(renderContext);
		});
	}
	
	if(window.location.hash) {
		document.getElementById(window.location.hash.replace("#", "")).scrollIntoView();
	}

  renderObservables();
}, function (reason) {
	// PDF loading error
	console.error(reason);
});
	
</script>

</body>

</html>
