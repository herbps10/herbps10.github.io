<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Herb Susmann</title>
    <link>/</link>
    <description>Recent content on Herb Susmann</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; Herb Susmann {year}</copyright>
    <lastBuildDate>Fri, 11 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Derivative Gaussian Processes in Stan</title>
      <link>/2020/12/11/derivative-gaussian-processes-in-stan/</link>
      <pubDate>Fri, 11 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/12/11/derivative-gaussian-processes-in-stan/</guid>
      <description>Fitting a Gaussian Process and its derivative in Stan.</description>
    </item>
    
    <item>
      <title>Conditioning on Gaussian Process Derivative Observations</title>
      <link>/2020/12/01/conditioning-on-gaussian-process-derivative-observations/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/12/01/conditioning-on-gaussian-process-derivative-observations/</guid>
      <description>Conditioning a Gaussian Process on derivative observations, with code in R.</description>
    </item>
    
    <item>
      <title>How Many Words Do You Need to Know to Watch Friends?</title>
      <link>/2020/08/04/friends/</link>
      <pubDate>Tue, 04 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/08/04/friends/</guid>
      <description>A few years ago, The New York Times published an article about several Major League Baseball players who use the sitcom Friends to improve their English. Friends seems to be a very popular tool for learning English: there’s even an ESL program developed around it, and you can easily find advice on how to use Friends as a language learning tool.
In my own language learning I’ve relied heavily on frequency dictionaries, which order words by their popularity.</description>
    </item>
    
    <item>
      <title>Derivatives of a Gaussian Process</title>
      <link>/2020/07/06/gaussian-process-derivatives/</link>
      <pubDate>Mon, 06 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/07/06/gaussian-process-derivatives/</guid>
      <description>Drawing from a Gaussian Process and its derivative.</description>
    </item>
    
    <item>
      <title>Firearm Background Check Timeseries Modeling</title>
      <link>/2020/02/01/firearm-background-check-timeseries-modeling/</link>
      <pubDate>Sat, 01 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/02/01/firearm-background-check-timeseries-modeling/</guid>
      <description>Gun dealers in the U.S. are required to conduct instant background checks before selling weapons to individuals. The FBI provides data for the number of these background checks performed by month/year, which serves as a proxy for the total number of gun sales in the U.S.
I brought the data into R for a quick and dirty analysis, with the intent of finding spikes in background checks around major events.</description>
    </item>
    
    <item>
      <title>Presidential Primary Polling Analysis in Stan</title>
      <link>/2019/08/10/presidential-primary-polling-analysis-in-stan/</link>
      <pubDate>Sat, 10 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/08/10/presidential-primary-polling-analysis-in-stan/</guid>
      <description>Note: this post has been updated with more recent data.
I often use random walk/autoregressive models in my research as a component in time-series analysis, and I wanted to get some more experience fitting them to data. FiveThirtyEight publishes several polling datasets, including polling for the 2020 Democratic presidential primary. I used Stan to fit a Bayesian random walk model to the polling data, which I describe below. The Stan and R code used in this post is available as a Github gist.</description>
    </item>
    
    <item>
      <title>Autoregressive Processes are Gaussian Processes</title>
      <link>/2019/08/09/autoregressive-processes-are-gaussian-processes/</link>
      <pubDate>Fri, 09 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/08/09/autoregressive-processes-are-gaussian-processes/</guid>
      <description>Autoregressive (AR) processes are a popular choice for modeling time-varying processes. AR processes are typically written down as a set of conditional distributions, but if we do some algebra we can show how they can also be written as a Gaussian process. One reason having a Guassian process representation is useful is because it makes it more clear how an AR process can be incorporated into larger models, like a spatio-temporal model.</description>
    </item>
    
    <item>
      <title>Using R formulas to pass data to Stan</title>
      <link>/2019/07/22/r-formulas-stan/</link>
      <pubDate>Mon, 22 Jul 2019 18:00:00 +0000</pubDate>
      
      <guid>/2019/07/22/r-formulas-stan/</guid>
      <description>Write flexible Stan models by using the R formula interface.</description>
    </item>
    
    <item>
      <title>Smartphone interface for reporting research results to study participants</title>
      <link>/2019/04/08/smartphone-interface-for-reporting-research-results-to-study-participants/</link>
      <pubDate>Mon, 08 Apr 2019 18:00:00 +0000</pubDate>
      
      <guid>/2019/04/08/smartphone-interface-for-reporting-research-results-to-study-participants/</guid>
      <description>We developed a novel interface for reporting results to participants of exposure studies.</description>
    </item>
    
    <item>
      <title>What Poisons Are in Your Body? - Nick Kristof</title>
      <link>/2018/02/25/what-poisons-are-in-your-body-nick-kristof/</link>
      <pubDate>Sun, 25 Feb 2018 18:00:00 +0000</pubDate>
      
      <guid>/2018/02/25/what-poisons-are-in-your-body-nick-kristof/</guid>
      <description>New York Times columnist Nick Kristof covers the Detox Me Action Kit project.</description>
    </item>
    
    <item>
      <title>They&#39;re all good dogs</title>
      <link>/2018/02/04/theyre-all-good-dogs/</link>
      <pubDate>Sun, 04 Feb 2018 12:00:00 +0000</pubDate>
      
      <guid>/2018/02/04/theyre-all-good-dogs/</guid>
      <description>Analyzing tweets from @dog_rates.</description>
    </item>
    
    <item>
      <title>Fastest way to see 17 Boston breweries (and one cider house)</title>
      <link>/2017/10/09/fastest-way-to-see-17-boston-breweries-and-one-cider-house/</link>
      <pubDate>Mon, 09 Oct 2017 12:00:00 +0000</pubDate>
      
      <guid>/2017/10/09/fastest-way-to-see-17-boston-breweries-and-one-cider-house/</guid>
      <description>Calculating an optimal route between all the Boston area breweries using a Traveling Salesman Problem solver.</description>
    </item>
    
    <item>
      <title>Bananagrams Probabilities</title>
      <link>/2017/07/30/bananagrams-probabilities/</link>
      <pubDate>Sun, 30 Jul 2017 21:13:14 -0500</pubDate>
      
      <guid>/2017/07/30/bananagrams-probabilities/</guid>
      <description>Calculating the probability of starting with a complete word in Bananagrams.</description>
    </item>
    
    <item>
      <title>Build a Crystal Radio</title>
      <link>/2016/11/28/build-a-crystal-radio/</link>
      <pubDate>Mon, 28 Nov 2016 12:00:00 +0000</pubDate>
      
      <guid>/2016/11/28/build-a-crystal-radio/</guid>
      <description>We built a crystal radio sets at a workshop for teens.</description>
    </item>
    
    <item>
      <title>Raytracing in Bash</title>
      <link>/2014/04/04/raytracing-in-bash/</link>
      <pubDate>Fri, 04 Apr 2014 21:13:14 -0500</pubDate>
      
      <guid>/2014/04/04/raytracing-in-bash/</guid>
      <description>It turns out it is possible to write a minimal raytracer in Bash.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>For my undergraduate degree, I studied Mathematics at the State University of New York at Geneseo. I then worked from 2014-2018 as a software developer at Silent Spring Institute in Newton, Massachusetts, where I worked on methods for making complex scientific information accessible to lay audiences.
From 2018-2022 I pursued a PhD in Biostatistics in the Department of Biostatistics &amp;amp; Epidemiology at the University of Massachusetts Amherst, with Leontine Alkema as my advisor.</description>
    </item>
    
    <item>
      <title>Curve Fitting with B-Splines</title>
      <link>/notebooks/b-splines/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/notebooks/b-splines/</guid>
      <description>import {Runtime, Inspector} from &#34;https://cdn.jsdelivr.net/npm/@observablehq/runtime@4/dist/runtime.js&#34;; import define from &#34;https://api.observablehq.com/@herbps10/b-splines.js?v=3&#34;; new Runtime().module(define, Inspector.into(&#34;#observablehq-66aca9e3&#34;));  .observablehq--inspect { display: none; }  Source code: Observable notebook.</description>
    </item>
    
    <item>
      <title>Dirichlet Distribution</title>
      <link>/notebooks/dirichlet-distribution/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/notebooks/dirichlet-distribution/</guid>
      <description>import {Runtime, Inspector} from &#34;https://cdn.jsdelivr.net/npm/@observablehq/runtime@4/dist/runtime.js&#34;; import define from &#34;https://api.observablehq.com/@herbps10/dirichlet-distribution.js?v=3&#34;; new Runtime().module(define, Inspector.into(&#34;#observablehq-763d3248&#34;));  .observablehq--inspect { display: none; }  Source code: Observable notebook.</description>
    </item>
    
    <item>
      <title>Gaussian Process Playground</title>
      <link>/notebooks/gaussian-process-playground/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/notebooks/gaussian-process-playground/</guid>
      <description>import {Runtime, Inspector} from &#34;https://cdn.jsdelivr.net/npm/@observablehq/runtime@4/dist/runtime.js&#34;; import define from &#34;https://api.observablehq.com/@herbps10/gaussian-processes.js?v=3&#34;; new Runtime().module(define, Inspector.into(&#34;#observablehq-870dca1f&#34;));  .observablehq--inspect { display: none; }  Source code: Observable notebook.</description>
    </item>
    
    <item>
      <title>Hamiltonian Markov Chain Monte Carlo</title>
      <link>/notebooks/hamiltonian-monte-carlo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/notebooks/hamiltonian-monte-carlo/</guid>
      <description>import {Runtime, Inspector} from &#34;https://cdn.jsdelivr.net/npm/@observablehq/runtime@4/dist/runtime.js&#34;; import define from &#34;https://api.observablehq.com/@herbps10/hamiltonian-monte-carlo.js?v=3&#34;; new Runtime().module(define, Inspector.into(&#34;#observablehq-2458977f&#34;));  .observablehq--inspect { display: none; }  Source code: Observable notebook.</description>
    </item>
    
    <item>
      <title>One-step Estimators and Pathwise Derivatives</title>
      <link>/notebooks/one-step-estimators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/notebooks/one-step-estimators/</guid>
      <description>import {Runtime, Inspector} from &#34;https://cdn.jsdelivr.net/npm/@observablehq/runtime@4/dist/runtime.js&#34;; import define from &#34;https://api.observablehq.com/@herbps10/one-step-estimators-and-pathwise-derivatives.js?v=3&#34;; new Runtime().module(define, Inspector.into(&#34;#observablehq-4907f595&#34;));  .observablehq--inspect { display: none; }  Source code: Observable notebook.</description>
    </item>
    
    <item>
      <title>Research</title>
      <link>/research/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/research/</guid>
      <description>Preprints  2023 A Bayesian analysis of current duration data with reporting issues: an application to estimating the distribution of time-between-sex from time-since-last-sex data as collected in cross-sectional surveys in low- and middle-income countries Chi Hyun Lee, Herbert Susmann, and Leontine Alkema. arXiv preprint arXiv:2302.00951.   2023 Inference in Marginal Structural Models by Automatic Targeted Bayesian and Minimum Loss-Based Estimation. Herbert Susmann and Antoine Chambaz. arXiv preprint arXiv:2301.10630.   2023 Flexible Modeling of Demographic Transition Processes with a Bayesian Hierarchical Penalized B-splines Model.</description>
    </item>
    
    <item>
      <title>Sampling from Multi-Modal Densities</title>
      <link>/notebooks/multimodal-densities/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/notebooks/multimodal-densities/</guid>
      <description>import {Runtime, Inspector} from &#34;https://cdn.jsdelivr.net/npm/@observablehq/runtime@4/dist/runtime.js&#34;; import define from &#34;https://api.observablehq.com/@herbps10/sampling-from-multi-modal-distributions.js?v=3&#34;; new Runtime().module(define, Inspector.into(&#34;#observablehq-763d3248&#34;));  .observablehq--inspect { display: none; }  Source code: Observable notebook.</description>
    </item>
    
    <item>
      <title>Software</title>
      <link>/software/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software/</guid>
      <description>R packages  RNHANES: Tools for downloading and analyzing CDC NHANES data, with a focus on analytical laboratory data. [github] [CRAN] Reactor: Reactive notebooks for R. [website] [github] [lightning talk video]  </description>
    </item>
    
    <item>
      <title>Yes Yes No: Collider Bias</title>
      <link>/notebooks/collider-bias/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/notebooks/collider-bias/</guid>
      <description> import {Runtime, Inspector} from &#34;https://cdn.jsdelivr.net/npm/@observablehq/runtime@4/dist/runtime.js&#34;; import define from &#34;https://api.observablehq.com/@herbps10/collider-bias.js?v=3&#34;; new Runtime().module(define, Inspector.into(&#34;#observablehq-8eac214f&#34;));  Source code: Observable notebook.
.observablehq--inspect { display: none; }   </description>
    </item>
    
  </channel>
</rss>
